[core]
	editor = code --wait
	excludesfile = ~/.gitignore_global
	ignorecase = false
	autocrlf = input
[color]
	branch = true
	diff = true
	interactive = true
	status = true
	ui = true
[credential]
	helper = osxkeychain
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[filter "hawser"]
	clean = git hawser clean %f
	required = true
	smudge = git hawser smudge %f
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[filter "media"]
	clean = git media clean %f
	required = true
	smudge = git media smudge %f
[gc]
	auto = 1
[merge]
	tool = vscode
[mergetool "vscode"]
	prompt = false
	cmd = code --wait $MERGED
	trustexitcode = true
[pull]
	rebase = true
[rebase]
	autostash = true
[user]
	email = syndicated.life@gmail.com
	name = Ryan Wilson
[alias]
    c = "!f(){ git clean -x -d -f; };f"
    f = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
    l = "!f(){ git rm -r --cached . && git reset --hard; };f"
    p = "!f(){ git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -D; };f"
    r = "!f(){ mkdir -p lost; for blob in $(git fsck --lost-found | awk '$2 == \"blob\" { print $3 }'); do git cat-file -p $blob > lost/$blob.txt; done };f"
    s = "!f(){ git reset --soft HEAD^ && git add . && git stash; };f"
    z = "!f(){ npx git-cz; };f"
[rerere]
	enabled = true
[init]
	defaultBranch = main
